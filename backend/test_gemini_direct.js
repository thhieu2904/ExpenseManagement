// Test tr·ª±c ti·∫øp Gemini API v·ªõi message ADD_ACCOUNT
require("dotenv").config();
const { GoogleGenerativeAI } = require("@google/generative-ai");

const genAI = new GoogleGenerativeAI(process.env.GEMINI_API_KEY);
const model = genAI.getGenerativeModel({ model: "gemini-1.5-flash" });

async function testGeminiAddAccount() {
  console.log("ü§ñ Testing Gemini API directly for ADD_ACCOUNT...\n");

  const prompt = `
B·∫°n l√† AI assistant cho ·ª©ng d·ª•ng qu·∫£n l√Ω t√†i ch√≠nh c√° nh√¢n. Ph√¢n t√≠ch tin nh·∫Øn v√† tr·∫£ v·ªÅ JSON.

INTENTS:
1. **ADD_ACCOUNT** - Th√™m t√†i kho·∫£n m·ªõi (ng√¢n h√†ng ho·∫∑c ti·ªÅn m·∫∑t)
   - Entities: name, type (TIENMAT/THENGANHANG), bankName, accountNumber
   - Patterns: "t·∫°o t√†i kho·∫£n", "th√™m t√†i kho·∫£n", "m·ªü t√†i kho·∫£n", "t·∫°o v√≠"

V√ç D·ª§:
User: "t·∫°o t√†i kho·∫£n ACB m·ªõi"
Response:
{
  "intent": "ADD_ACCOUNT",
  "entities": {
    "specificAccount": null,
    "bankFilter": null,
    "categoryFilter": null,
    "timeFilter": null,
    "amountFilter": null,
    "searchTerm": null,
    "typeFilter": null,
    "statusFilter": null
  },
  "transaction": null,
  "category": null,
  "account": { "name": "T√†i kho·∫£n ACB", "type": "THENGANHANG", "bankName": "ACB", "accountNumber": "" },
  "goal": null,
  "responseForUser": "T√¥i s·∫Ω t·∫°o t√†i kho·∫£n ng√¢n h√†ng ACB cho b·∫°n."
}

QUY T·∫ÆC:
- Khi user n√≥i "t·∫°o t√†i kho·∫£n", "th√™m t√†i kho·∫£n", "m·ªü t√†i kho·∫£n" => PH·∫¢I tr·∫£ v·ªÅ intent: "ADD_ACCOUNT"
- Ch·ªâ tr·∫£ v·ªÅ JSON thu·∫ßn t√∫y, kh√¥ng c√≥ markdown

User: "t·∫°o t√†i kho·∫£n acb"
`;

  try {
    const result = await model.generateContent(prompt);
    const response = await result.response;
    const text = response.text();

    console.log("üìù Raw Gemini Response:");
    console.log(text);
    console.log("\n" + "=".repeat(50));

    // Th·ª≠ parse JSON
    try {
      const cleanedText = text.replace(/```json|```/g, "").trim();
      const jsonResponse = JSON.parse(cleanedText);
      console.log("‚úÖ Parsed JSON:");
      console.log("Intent:", jsonResponse.intent);
      if (jsonResponse.account) {
        console.log("Account:", JSON.stringify(jsonResponse.account, null, 2));
      }
    } catch (parseError) {
      console.log("‚ùå Failed to parse JSON:", parseError.message);
    }
  } catch (error) {
    console.log("‚ùå Gemini API Error:", error.message);
  }
}

testGeminiAddAccount();
