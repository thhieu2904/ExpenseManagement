/* ExtendedHeaderCard.module.css */

.extendedHeaderCard {
  /* Identical base styles with HeaderCard */
  background: var(--color-background);
  border-radius: var(--border-radius-xl);
  box-shadow: var(--shadow-base);
  border: 1.5px solid var(--color-border);
  padding: var(--component-padding);
  min-height: var(--header-card-min-height);
  margin-bottom: var(--component-margin-bottom);
  display: flex;
  flex-direction: column;
  gap: var(--component-gap);
}

/* Grid Layout 3x2 - cho CategoryPageHeader */
.gridLayout {
  display: grid;
  grid-template-columns: 1fr 300px; /* Col 1: flexible, Col 2: fixed width cho widget */
  grid-template-rows: auto 1fr auto; /* 3 rows: title, filter (grow), action */
  gap: var(--component-gap);
  align-items: start;
  min-height: 140px; /* Tăng chiều cao để phù hợp với widget có text dài */
}

.gridTitle {
  grid-column: 1;
  grid-row: 1;
  display: flex;
  align-items: center;
  
  /* Title styles */
  font-size: var(--title-font-size-h1);
  font-weight: 700;
  color: var(--color-text-primary);
  margin: 0;
  letter-spacing: -0.8px;
  line-height: 1.2;
}

.gridExtra {
  grid-column: 2;
  grid-row: 1 / 3; /* Span từ row 1 đến row 2 (2 hàng đầu) trở lại */
  display: flex;
  align-items: flex-start; /* Căn trên */
  justify-content: flex-end; /* Căn phải */
  min-height: 130px; /* Tăng chiều cao để phù hợp với widget có text dài */
  margin-top: 0;
}

.gridFilter {
  grid-column: 1;
  grid-row: 2;
  display: flex;
  align-items: flex-end; /* Căn dưới như yêu cầu */
  justify-content: flex-start; /* Căn trái */
  gap: var(--component-gap);
  width: 100%;
  height: 100%; /* Quay lại 100% để có thể căn dưới */
  min-height: fit-content; /* Chiều cao tối thiểu vừa đủ */
}

.gridAction {
  grid-column: 1 / 3; /* Span cả 2 cột */
  grid-row: 3;
  display: flex;
  justify-content: flex-end;
  align-items: center;
  gap: var(--component-gap);
  margin-top: var(--spacing-sm);
}

/* Dòng 1: Title Section */
.titleSection {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: var(--component-gap);
  flex-wrap: wrap;
}

.title {
  /* Áp dụng hệ thống title hierarchy mới - Cấp cao nhất */
  font-size: var(--title-font-size-h1);
  font-weight: 700;
  color: var(--color-text-primary);
  margin: 0;
  letter-spacing: -0.8px;
  line-height: 1.2;
  /* Tương đương .title-h1 từ globals.css */
}

.extra {
  display: flex;
  align-items: center;
  gap: var(--component-gap);
}

.filter {
  display: flex;
  align-items: center;
  gap: var(--component-gap);
  margin-top: var(--spacing-sm);
  width: 100%;
}

/* Dòng 2: Custom Content */
.customSections {
  display: flex;
  flex-direction: column;
  gap: var(--component-gap);
}

.customSection {
  width: 100%;
}

.childrenContent {
  width: 100%;
}

/* Dòng 3: Action Section - căn phải */
.actionSection {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  gap: var(--component-gap);
  margin-top: var(--spacing-sm);
}

.customSections {
  display: flex;
  flex-direction: column;
  gap: var(--component-gap);
}

.customSection {
  width: 100%;
}

.childrenContent {
  width: 100%;
}

/* Button styles for actions */
.primaryButton {
  display: inline-flex;
  align-items: center;
  gap: var(--spacing-xs);
  background-color: var(--color-primary);
  color: white;
  border: none;
  padding: var(--spacing-sm) var(--spacing-md);
  border-radius: var(--border-radius-md);
  font-size: var(--font-size-base);
  font-weight: var(--font-weight-medium);
  cursor: pointer;
  transition: all 0.2s ease;
}

.primaryButton:hover {
  background-color: var(--color-primary-hover);
  transform: translateY(-1px);
}

.primaryButton:disabled {
  background-color: var(--color-gray-300);
  cursor: not-allowed;
  transform: none;
}

.secondaryButton {
  display: inline-flex;
  align-items: center;
  gap: var(--spacing-xs);
  background-color: transparent;
  color: var(--color-text-secondary);
  border: 1px solid var(--color-gray-300);
  padding: var(--spacing-sm) var(--spacing-md);
  border-radius: var(--border-radius-md);
  font-size: var(--font-size-base);
  font-weight: var(--font-weight-medium);
  cursor: pointer;
  transition: all 0.2s ease;
}

.secondaryButton:hover {
  background-color: var(--color-gray-50);
  border-color: var(--color-gray-400);
}

/* Responsive behavior */
@media (max-width: 1024px) {
  /* Tablet - giảm width của widget */
  .gridLayout {
    grid-template-columns: 1fr 280px;
    min-height: 130px;
  }
  
  .gridExtra {
    min-height: 120px;
  }
}

@media (max-width: 768px) {
  /* Grid layout responsive */
  .gridLayout {
    grid-template-columns: 1fr; /* Single column on mobile */
    grid-template-rows: auto auto auto auto; /* 4 rows: title, extra, filter, action */
    min-height: auto;
    gap: 1rem;
  }
  
  .gridTitle {
    grid-column: 1;
    grid-row: 1;
  }
  
  .gridExtra {
    grid-column: 1;
    grid-row: 2; /* Widget riêng 1 row */
    min-height: 100px;
    margin-top: 0;
  }
  
  .gridFilter {
    grid-column: 1;
    grid-row: 3;
  }
  
  .gridAction {
    grid-column: 1;
    grid-row: 4;
    justify-content: flex-start;
  }
  
  /* Original responsive */
  .titleSection {
    flex-direction: column;
    align-items: flex-start;
  }
  
  .actionSection {
    justify-content: flex-start;
    width: 100%;
  }
  
  .filter {
    width: 100%;
  }
  
  .primaryButton,
  .secondaryButton {
    flex: 1;
    justify-content: center;
  }
}
