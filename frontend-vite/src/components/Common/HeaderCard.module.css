/* === LAYOUT THU·∫¶N T√öY - CH·ªà CH·ª®A STRUCTURE, KH√îNG CH·ª®A STYLE UI === */

/* Base header card container */
.headerCard {
  background: var(--color-background);
  border-radius: var(--border-radius-xl);
  box-shadow: var(--shadow-base);
  border: 1.5px solid var(--color-border);
  padding: var(--component-padding);
  min-height: 240px;
  margin-bottom: var(--component-margin-bottom);
  position: relative;
}

/* Layout m·∫∑c ƒë·ªãnh (backward compatible) */
.defaultLayout {
  display: grid;
  grid-template-rows: auto auto;
  grid-template-columns: 1fr auto;
  row-gap: var(--component-gap);
  column-gap: var(--component-gap);
  align-items: center;
}

/* Layout linh ho·∫°t cho custom content */
.flexibleLayout {
  display: block;
}

/* Layout 2x2 Grid chu·∫©n cho t·∫•t c·∫£ pages - CH·ªà LAYOUT, KH√îNG STYLE UI */
.gridLayout {
  display: grid !important;
  grid-template-columns: 1fr auto !important;
  grid-template-rows: auto auto !important;
  gap: 2rem !important;
  align-items: start !important;
}

/* Position slots cho default layout - CH·ªà V·ªä TR√ç */
.defaultLayout .title {
  grid-row: 1;
  grid-column: 1;
  align-self: start;
}

.defaultLayout .extra {
  grid-row: 1;
  grid-column: 2;
  justify-self: end;
  align-self: start;
}

.defaultLayout .filter {
  grid-row: 2;
  grid-column: 1;
  align-self: end;
  justify-self: start;
}

.defaultLayout .action {
  grid-row: 2;
  grid-column: 2;
  justify-self: end;
  align-self: end;
}

/* Standard Grid Item Classes - CH·ªà V·ªä TR√ç, KH√îNG STYLE UI */
.gridItem1_1 {
  grid-row: 1;
  grid-column: 1;
  z-index: 1;
  display: flex;
  flex-direction: row; /* ƒê·∫£m b·∫£o icon v√† text n·∫±m ngang */
  align-items: center;
  gap: 1rem;
  font-size: 1.5rem;
  font-weight: 600;
}

.gridItem1_2 {
  grid-row: 1;
  grid-column: 2;
  justify-self: stretch;   /* ƒê·ªïi t·ª´ end sang stretch */
  align-self: stretch;     /* ƒê·ªïi t·ª´ start sang stretch */
  min-width: 220px;
  width: 100%;             /* Th√™m d√≤ng n√†y */
  max-width: none;         /* Th√™m d√≤ng n√†y */
  display: flex;           /* Th√™m d√≤ng n√†y ƒë·ªÉ con k√©o gi√£n */
  align-items: center;     /* CƒÉn gi·ªØa d·ªçc */
}

.gridItem2_1 {
  grid-row: 2;
  grid-column: 1;
  align-self: end;
  z-index: 1;
  font-size: 1rem;
  color: var(--color-text-secondary);
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}

.gridItem2_2 {
  grid-row: 2;
  grid-column: 2;
  justify-self: end;
  align-self: end;
  z-index: 1;
  min-width: 160px;
}

/* === RESPONSIVE LAYOUT - CH·ªà LAYOUT, KH√îNG STYLE UI === */

/* Responsive cho default layout */
@media (max-width: 992px) {
  .defaultLayout {
    grid-template-columns: 1fr;
    grid-template-rows: auto auto auto auto;
    row-gap: var(--component-gap);
  }

  .defaultLayout .title,
  .defaultLayout .extra,
  .defaultLayout .filter,
  .defaultLayout .action {
    grid-column: 1 !important;
    justify-self: stretch;
    align-self: start;
  }

  .defaultLayout .extra {
    justify-self: start;
    width: 100%;
  }

  .defaultLayout .action {
    margin-top: 0.5rem;
    justify-self: stretch;
  }
}

@media (max-width: 576px) {
  .defaultLayout .filter {
    width: 100%;
  }
  .defaultLayout .filter > * {
    width: 100%;
  }
}

/* Responsive cho grid layout */
@media (max-width: 992px) {
  .gridLayout {
    grid-template-columns: 1fr !important;
    grid-template-rows: auto auto auto auto !important;
    gap: 1.5rem !important;
  }
}

@media (max-width: 576px) {
  .gridLayout {
    gap: 1.25rem !important;
  }
}

/* Responsive cho grid items */
@media (max-width: 992px) {
  .gridItem1_1 {
    grid-row: 1;
    grid-column: 1;
  }

  .gridItem1_2 {
    grid-row: 2;
    grid-column: 1;
    justify-self: stretch;
    align-self: start;
  }

  .gridItem2_1 {
    grid-row: 3;
    grid-column: 1;
    align-self: start;
  }

  .gridItem2_2 {
    grid-row: 4;
    grid-column: 1;
    justify-self: stretch;
    align-self: start;
  }
}

/* ====== UI CHUNG CHO SMART CONTENT & MINI STATS (D√ôNG CHUNG CHO T·∫§T C·∫¢ PAGE) ====== */
.contextText {
  font-size: 1rem;
  color: var(--color-text-secondary);
  font-weight: 500;
  line-height: 1.4;
}

.moodEmoji {
  font-size: 1.25rem;
  filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.1));
  margin-left: 0.5rem;
  color: #3f51b5; /* ƒê·ªïi m√†u emoji th√†nh xanh c√πng h·ªç v·ªõi navbar */
}

.miniStats {
  font-size: 0.875rem;
  color: var(--color-text-tertiary);
  font-weight: 500;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.miniStats::before {
  content: "\1F4C5 "; /* Unicode cho icon l·ªãch üìÖ */
  font-size: 1rem;
  margin-right: 0.25rem;
  color: #3f51b5; /* M√†u xanh ƒë·ªìng b·ªô v·ªõi navbar */
}

/* Subtitle nh·ªè d∆∞·ªõi ti√™u ƒë·ªÅ */
.subtitle {
  font-size: 0.95rem;
  color: var(--color-text-secondary);
  font-weight: 500;
}

/* Greeting icon (v√≠ d·ª• icon ti·ªÅn, user...) */
.greetingIcon {
  font-size: 2.5rem;
  color: #3f51b5; /* M√†u xanh d∆∞∆°ng nh∆∞ b·∫°n mu·ªën */
  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));
  flex-shrink: 0; /* Kh√¥ng cho icon b·ªã co l·∫°i */
}

/* Container cho title v√† subtitle - V·ªÄ FLEXBOX COLUMN */
.greetingText {
  display: flex;
  flex-direction: column; /* Title v√† subtitle x·∫øp d·ªçc */
  gap: 0.25rem;
}

/* Style cho title text */
.titleText {
  font-size: 1.5rem;
  font-weight: 600;
  color: var(--color-text-primary, #1f2937);
}
